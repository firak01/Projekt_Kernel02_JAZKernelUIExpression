##########################################################################################################################
### Diese Ini-Datei ist die Konfiguration des Kernels. Der Name/Pfad muß bei Erstellung des KernelObjekts übergeben werden
##########################################################################################################################
;Merke: An die Zeilen angehängte Semikoli werden nicht als Kommentare erkannt. Am Zeilenanfang schon.


### Application Test konfigurieren, Produktivsystem 01
[TEST!01]
#Hierin kann LogZZZ, das ja beim Initialisieren des Kernels auch zur Verfügung gestellt wird, die Protokollierung durchführen
KernelLogPath=c:\fglKernel\KernelLog 
KernelLogFile=ZKernelLog_KernelUI_Expression_Test.txt

### Modulkonfiguration(en), jeder Test als eigenes Modul, in DIESER ini-Datei ##################
# Jede Klasse, die ein main() enthält 'kann' hier als Modul konfiguriert werden
# Dazu den Klassennamen hier angeben. Um eine extra Datei zu sparen, kann hier auch der gleiche Dateiname wie für den Kernel angegeben werden.
# Schema: KernelConfig + [Path/File] + Klassenname 
KernelConfigPathzKernelUI.component.expression.KernelUIExpressionZZZTest=
KernelConfigFiletzKernelUI.component.expression.KernelUIExpressionZZZTest=ZKernelConfigKernelUIExpression_test.ini

# Applikations-/Modulparameter
;Modulkonfiguration:  TEST MODUL
;KernelConfigPathTestModule=
;KernelConfigFileTestModule=ZKernelConfigTestModule_test.ini


### Programmkonfiguration(en) (per Aliasnamen)
# Wenn in diesem File die Module definiert sind, dann können hier auch die einzelnen Programme der Module definiert werden.
#
# Merke: 
# Jeder Test ist als eigenes Programm definiert. D.h. Er hat in dieser Datei eine eigene Section.
# Es ist möglich Aliaswerte zu definieren (die dann in die Section kokmmen).
# Aber es reicht auch aus den Programnamen als Section zu verwenden.
# Schema: Klassenname oder Aliasname = Aliaswert

# Testprogramme, hier werden Aliasnamen definiert.
;Das ist ein feststehender Name, der verwendet werden muss, wenn der Context aus dieser Configuration geholt werden soll.
;Der Vorteil von Aliasnamen ist, das sie für mehrere 'Programme' verwendet werden können.
#Finden der Notes-Context Objekte. z.B. Configurationsdb
;test.via.client.FrmMainVIATest=Client_Context


### Konkrete(s) Programm(e)
# Entweder über den Aliasnamen definiert, oder über den Klassennamen direkt
# Für eine spezielle Umgebung kann der Programmname auch definiert werden nach dem Schema:
#         ApplicationKey + "#" + Systemnumber + "!" + Programmname
# Merke: Einträge, die für die spezielle Umgebung gemacht wurden, ersetzen die für den allgemeinen Programmnamen gemachte Einträge.

#defiertes programm über einen Aliasnamen. 

